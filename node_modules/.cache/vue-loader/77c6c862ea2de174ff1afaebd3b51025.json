{"remainingRequest":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\src\\components\\moderator\\Publications\\Editor.vue?vue&type=template&id=253b716a&","dependencies":[{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\src\\components\\moderator\\Publications\\Editor.vue","mtime":1686825405645},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686771862028},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686771862028},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1686771872096},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1686771886986},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686771862028},{"path":"C:\\Users\\Nocok\\OneDrive\\Рабочий стол\\imho4-admin-front-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1686771882662}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}